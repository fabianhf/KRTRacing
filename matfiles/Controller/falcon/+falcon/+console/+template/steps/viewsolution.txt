function viewsolution(problem, solution)
    % Inspect the problem and solution.

    % You can now compute a solution that simulates
    % the system behaviour if the optimal control
    % inputs were applied over the whole time.
    simulation = struct();
    [ ...
        simulation.states, simulation.outputs, ...
        simulation.time, simulation.statesDot ...
    ] = problem.Simulate();
    {% if strcmp(plot, 'gui') %}
    % This is the place for you to add your own postprocessing
    % and analysis steps. For example, you can use the GUI
    % to create (repeatable) plots.
    falcon.gui.plot.show(problem, 'AskSaveOnClose', false);
    {% else %}
    % This is the place for you to add your own postprocessing
    % and analysis steps. Here, the Simulink data inspector
    % is used to display the optimal results.
    falcon.gui.sdi.show(problem);
    {% end %}
end
